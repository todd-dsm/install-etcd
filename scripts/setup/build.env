#!/usr/bin/env bash
# PURPOSE:  Generate some variables for GCP/GKE. This file is called with one
#           argument while sourcing it in.
# -----------------------------------------------------------------------------
#    EXEC:  source zsetup/env-vars.sh <prod|stage> bucketName
# -----------------------------------------------------------------------------
set -x

# -----------------------------------------------------------------------------
# Check for arguments
if [[ "$#" -lt 1 ]]; then
    echo "Bro, you need to pass some arguments; exiting}"
    echo "details: head source zsetup/env-vars.sh"
    set +x
    return
fi

# The Build Environment
export TF_VAR_envBuild="$1"
export TF_VAR_dns_zone='opcon.dev'
export certDir="$(pwd)/secrets/certs"
export certConf='./secrets/config'
# Give your bucket a name; it will ONLY be used under the project
# EG: demo
#export TF_VAR_envBucket="$2"

# -----------------------------------------------------------------------------
# TCB; Organization stuff
# gcloud organizations list
export TF_VAR_org_id="$(gcloud organizations list --format='value(ID)')"
#export TF_VAR_org_id='899709558505'
# gcloud beta billing accounts list
# TCB; billing stuff
export TF_VAR_billing_account='019AE0-31469B-F5BC73'
#export TF_VAR_billing_account="$(gcloud beta billing accounts list \
#    --format='value(ACCOUNT_ID)')"
# TCB; PROJECT
export TF_VAR_project="$(gcloud config configurations list \
    --format 'value(PROJECT)')"
# Same for either ENV
export TF_VAR_region="$(gcloud config list --format 'value(compute.region)')"
export TF_VAR_zone="$(gcloud config list --format 'value(compute.zone)')"
export newClusterENV="$TF_VAR_envBuild-la"


# -----------------------------------------------------------------------------
# Environmental Considerations
# Terraform Constants
case "$TF_VAR_envBuild" in
    stage)
        export TF_VAR_cluster_name="kubes-${newClusterENV}"
        export TF_VAR_minDistSize='3'
        export TF_VAR_kubeNode_type='g1-small'
        ;;
    prod)
        export TF_VAR_cluster_name="kubes-${newClusterENV}"
        export TF_VAR_minDistSize='3'
        export TF_VAR_kubeNode_type='n1-standard-2'
        ;;
    *)  echo "$TF_VAR_envBuild is unsupported; exiting."
        ;;
esac


# -----------------------------------------------------------------------------
# Same for either ENV; depends on case
export tfAdmin="tf-admin-${USER}"
#export tfAdmin="todd-00-dsm"
export TF_VAR_projectCreds="$HOME/.config/gcloud/${tfAdmin}.json"
export TF_VAR_envBucket="${TF_VAR_project}"                   # FIXME
export planFile="/tmp/${TF_VAR_cluster_name}.plan"
export vaultStuff='/tmp/vault-stuff.out'
export vaultCert="$certDir/ca.pem"
set +x
